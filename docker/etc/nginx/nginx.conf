user root;
worker_processes auto;
daemon off;

worker_rlimit_nofile 655360;

error_log syslog:server=unix:/var/run/nginx_error;

pid /var/run/nginx.pid;

events {
  worker_connections 4000;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format graylog2_json escape=json '{ "timestamp": "$time_iso8601", '
                     '"remote_addr": "$remote_addr", '
                     '"body_bytes_sent": $body_bytes_sent, '
                     '"request_time": $request_time, '
                     '"response_status": $status, '
                     '"request": "$request", '
                     '"request_method": "$request_method", '
                     '"host": "$host",'
                     '"upstream_cache_status": "$upstream_cache_status",'
                     '"upstream_addr": "$upstream_addr",'
                     '"http_x_forwarded_for": "$http_x_forwarded_for",'
                     '"http_referrer": "$http_referer", '
                     '"http_user_agent": "$http_user_agent" }';

  access_log syslog:server=unix:/var/run/nginx_access graylog2_json;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  gzip on;
  gzip_min_length 20;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/json application/xml application/javascript;
  gzip_disable msie6;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # request timed out -- default 60
  client_body_timeout 10;

  # if client stop responding, free up memory -- default 60
  send_timeout 2;

  # server will close connection after this time -- default 75
  keepalive_timeout 0;

  server_tokens off;

  include /etc/nginx/conf.d/*;
}
